name: Go build, test and lint

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
permissions:
  contents: read

jobs:
  go:
    strategy:
      matrix:
        go: [1.19]
        golangcli: [v1.50.1]
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: lint
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Go Cache Paths
        id: go-cache-paths
        run: |
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_OUTPUT

      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOCACHE }}
          key: ${{ runner.os }}-GOCACHE-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOMODCACHE }}
          key: ${{ runner.os }}-GOMODCACHE-${{ hashFiles('**/go.sum') }}

      - name: Go Lint Standard
        if: runner.os != 'Windows'
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ matrix.golangci }}
          args: "--out-${NO_FUTURE}format colored-line-number"
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Go Lint Windows
        if: runner.os == 'Windows'
        uses: golangci/golangci-lint-action@v3
        env:
          outformat: out-format
        with:
          version: ${{ matrix.golangci }}
          args: "--%outformat% colored-line-number"
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Go Build
        run: go build ./...

      - name: Go Test
        run: go test -race -v ./...
